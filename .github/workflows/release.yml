name: release-publish

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  actions: read
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

  upload-binaries:
    needs: release-please
    if: needs.release-please.outputs.release_created
    name: Compile and upload binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Compile
        run: |
          deno compile --allow-net --allow-read --allow-write --no-check --target ${{ matrix.target }} --output weather-cli cli.ts
          echo "Compiled for ${{ matrix.target }}"

      - name: Upload binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} weather-cli#${{ matrix.target }}_${{ needs.release-please.outputs.tag_name }} --clobber
